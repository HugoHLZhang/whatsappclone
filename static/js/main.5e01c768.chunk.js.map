{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","roomId","useParams","messages","setMessages","useEffect","Math","floor","random","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e01c768.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBN1JnQNL9TyLFIz4uPIiTFzJinrAmkKbw\",\r\n  authDomain: \"whatsapp-clone-5605d.firebaseapp.com\",\r\n  projectId: \"whatsapp-clone-5605d\",\r\n  storageBucket: \"whatsapp-clone-5605d.appspot.com\",\r\n  messagingSenderId: \"256481959544\",\r\n  appId: \"1:256481959544:web:d6dddb7c629c6c2712d78d\",\r\n  measurementId: \"G-BY9RFCEEYJ\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider};\r\nexport default db;","import React, {useEffect, useState} from 'react';\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport './SidebarChat.css';\r\nimport db from \"./firebase\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useParams} from \"react-router\"\r\n\r\nfunction SidebarChat({id , name, addNewChat}) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        if (id){\r\n            db.collection('rooms')\r\n            .doc(id)\r\n            .collection('messages')\r\n            .orderBy(\"timestamp\", \"desc\")\r\n            .onSnapshot(snapshot => (\r\n                setMessages(snapshot.docs.map((doc) =>\r\n                    doc.data()    \r\n                ))\r\n            ))\r\n        }\r\n    }, [id])\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Saisissez le nom du contact\");\r\n\r\n        if(roomName) {\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n        <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n            <div className=\"sidebarChat_info\">\r\n                <h2>\r\n                    {name}\r\n                </h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ): (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h2>Nouveau groupe</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, {createContext, useContext, useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'; \r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport SidebarChat from './SidebarChat';\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Sidebar(){\r\n    const [rooms, setRooms] = useState([]);\r\n    const[{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) => \r\n            setRooms(\r\n                snapshot.docs.map(doc => \r\n                ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                })\r\n                ))\r\n        );\r\n        return () =>{\r\n            unsubscribe();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n         <div className=\"sidebar_header\">\r\n            <Avatar src={user?.photoURL}/>  \r\n            <div className=\"sidebar_headerRight\">\r\n                <IconButton>\r\n                    <DonutLargeIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <ChatIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <MoreVertIcon/>\r\n                </IconButton>\r\n            </div>\r\n         </div>\r\n         <div className=\"sidebar_search\">\r\n             <div className=\"sidebar_searchContainer\">\r\n                <SearchOutlined/>\r\n                <input placeholder=\"Rechercher ou démarrer un nouvelle discussion\" type=\"text\"/>\r\n             </div>\r\n            \r\n         </div>\r\n         <div className=\"sidebar_chats\">\r\n             <SidebarChat addNewChat />\r\n             {rooms.map((room) => (\r\n                 <SidebarChat key={room.id} id={room.id} name={room.data.name}/>\r\n             ))}\r\n             \r\n         </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React,{useEffect, useState} from 'react';\r\nimport \"./Chat.css\";\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport {AttachFile, Message, MoreVert, SearchOutlined } from \"@material-ui/icons\"\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { useParams } from 'react-router';\r\nimport db from './firebase';    \r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        if(roomId){\r\n            db.collection(\"rooms\").doc(roomId).onSnapshot(snapshot => (\r\n                setRoomName(snapshot.data().name)\r\n                \r\n            ));\r\n            db.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\",\"asc\")\r\n            .onSnapshot((snapshot) => \r\n                setMessages(snapshot.docs.map((doc) => \r\n                doc.data()))\r\n            );\r\n        }\r\n    }, [roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"You typed >>>\", input);\r\n        db.collection(\"rooms\").doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"chat_headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>\r\n                        vu le{\" \"}\r\n                        {new Date(messages[messages.length -1]?.timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat_body\" >\r\n                {messages.map((message) =>(\r\n                    <p className={`chat_message ${message.name === user.displayName &&'chat_receiver'}`}>\r\n                    <span className=\"chat_name\">{message.name}</span>\r\n                    {message.message}\r\n                    <span className=\"chat_timestamp\">\r\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                    </p>\r\n                ))}\r\n                \r\n            </div>\r\n            <div className=\"chat_footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Taper un message\" type=\"text\"/>\r\n                    <button onClick={sendMessage} type=\"submit\">Envoie message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer =(state, action) => {\r\n    console.log(action);\r\n    switch (action.type){\r\n        case actionTypes.SET_USER:\r\n            return{\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { auth, provider } from './firebase'\r\nimport \"./Login.css\"\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from \"./StateProvider\"\r\n\r\nfunction Login() {\r\n    const[{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then((result) =>  {\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        })\r\n        .catch((error) => alert(error.message));\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\"\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n                <Button onClick={signIn}>\r\n                    Sign In with Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login \r\n","import './App.css';\nimport React, {useState} from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport {Route, Switch } from 'react-router';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    // BEM naming cpnvention\n    <div className=\"app\">\n      {!user ?(\n        <Login/>\n      ):(\n      <div className=\"app_body\">\n        <Router>\n          \n          <Sidebar />\n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n              <Chat />\n            </Route>\n            <Route path=\"/\">\n              <Chat/>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n      )}\n      \n    </div>\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, {initialState} from \"./reducer\";\nimport {StateProvider} from \"./StateProvider\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}